Leeme mucho
Video guía: https://www.youtube.com/watch?v=xRXHQlqA3Ak&list=PL_WGMLcL4jzX3SJvQQwLDDpALExKJY5bY

1. npm init --y para iniciar un proyecto en node
Instalando dependencias
2. npm i express --save instalar el framework express
3. npm i cors para evitar problemas de cors
4. npm i dotenv para variables de entorno
5. npm i multer para la carga de archivos y su manipulacion
6. npm i nodemon -D para que la wea corra cada vez que se actualiza algo
7. Agregar al package.json en la parte de scripts, dev: "nodemon app.js" app.js archivo de inicio
8. se podria ya ejecutar el git init pero antes crear el archivo gitignore
9. npm i express-validator -S para validar los datos que envia el usuario/frontend
Dos librerias para JWT
10. npm i jsonwebtoken -S para todo lo que tiene que ver con jwt
11. npm i bcryptjs -S para encriptar en la base de datos? existe otro paquete que es bcrypt
//MySQL
12. npm i sequelize -S dependencia ORM de base de datos, para configurar una conexion a una base de datos, en este caso MySQL
13. npm i mysql2 -S necesaria para poder hacer la conexion, (sequelize es solo para configurar o administrar la conexion de mejor manera, tambien la estructura de los datos-tablas)

En este proyecto las vistas se conocen como routes (rutas) ya que es una api rest
En el directorio utils (tambien conocido como helpers) van a ir algunas funciones que son repetitivas
En el caso de necesitar mongo DB ejecutar npm i mongoose -S
(Opcional) npm i mongoose-delete -S para borrado lógico en mongoDB

middleware -> entre la ruta (routes) y el controllador (controllers)/para validar?

min FIN